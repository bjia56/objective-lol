name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-go-binaries:
    name: Build Go Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # Windows
          - goos: windows
            goarch: amd64
            ext: .exe
          - goos: windows
            goarch: arm64
            ext: .exe
          # macOS
          - goos: darwin
            goarch: amd64
            ext: ""
          - goos: darwin
            goarch: arm64
            ext: ""
          # Linux
          - goos: linux
            goarch: amd64
            ext: ""
          - goos: linux
            goarch: arm64
            ext: ""

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Build olol binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        go build -o olol-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }} cmd/olol/main.go

    - name: Build olol-lsp binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        go build -o olol-lsp-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }} cmd/olol-lsp/main.go

    - name: Upload olol binary
      uses: actions/upload-artifact@v4
      with:
        name: olol-${{ matrix.goos }}-${{ matrix.goarch }}
        path: olol-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}

    - name: Upload olol-lsp binary
      uses: actions/upload-artifact@v4
      with:
        name: olol-lsp-${{ matrix.goos }}-${{ matrix.goarch }}
        path: olol-lsp-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}

  build-vscode-extension:
    name: Build VSCode Extension
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: vscode-extension/package-lock.json

    - name: Install dependencies
      working-directory: vscode-extension
      run: npm ci

    - name: Install vsce
      run: npm install -g @vscode/vsce

    - name: Compile extension
      working-directory: vscode-extension
      run: npm run compile

    - name: Package extension
      working-directory: vscode-extension
      run: vsce package

    - name: Upload VSIX
      uses: actions/upload-artifact@v4
      with:
        name: vscode-extension
        path: vscode-extension/*.vsix

  build-python-wheels:
    name: Build Python Wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04-arm, ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
    - uses: actions/checkout@v4

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.20.0
      env:
        CIBW_BUILD: cp39-* cp310-* cp311-* cp312-* cp313-*
        CIBW_SKIP: "*-musllinux*"
        CIBW_BUILD_VERBOSITY: 1
        CIBW_PROJECT_REQUIRES_PYTHON: ">=3.9"
        CIBW_ENVIRONMENT: >
          GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
      with:
        package-dir: python

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}
        path: wheelhouse/*.whl

  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Run Go tests
      run: go test ./...

    - name: Build and test olol binary
      run: |
        go build -o olol cmd/olol/main.go
        go build -o olol-lsp cmd/olol-lsp/main.go